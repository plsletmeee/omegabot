const { ChatInputCommandInteraction, ApplicationCommandOptionType, EmbedBuilder, ActionRowBuilder, ButtonBuilder } = require('discord.js')
const { v4: uuidv4 } = require('uuid')
const client = require('../../index')

module.exports = {
    name: 'gen',
    description: 'gen',
    options: [
        {
            name: 'drake',
            description: 'Generate a drake meme',
            type: ApplicationCommandOptionType.Subcommand,
            options: [
                {
                    name: 'top-text',
                    description: 'Top meme text',
                    required: true,
                    type: ApplicationCommandOptionType.String
                },
                {
                    name: 'bottom-text',
                    description: 'Bottom meme text',
                    required: true,
                    type: ApplicationCommandOptionType.String
                }
            ]
        },
        {
            name: 'sad-cat',
            description: 'Generate a sad cat meme',
            type: ApplicationCommandOptionType.Subcommand,
            options: [
                {
                    name: 'text',
                    description: 'Meme text',
                    required: true,
                    type: ApplicationCommandOptionType.String
                }
            ]
        },
        {
            name: 'jail',
            description: 'Generate a jail meme',
            type: ApplicationCommandOptionType.Subcommand,
            options: [
                {
                    name: 'image',
                    description: 'Image to create jail meme with',
                    required: false,
                    type: ApplicationCommandOptionType.Attachment
                }
            ]
        },
        {
            name: 'wanted',
            description: 'Generate a wanted poster',
            type: ApplicationCommandOptionType.Subcommand,
            options: [
                {
                    name: 'image',
                    description: 'Image to create wanted poster with',
                    required: false,
                    type: ApplicationCommandOptionType.Attachment
                }
            ]
        },
        {
            name: 'animal',
            description: 'Generate a cute animal',
            type: ApplicationCommandOptionType.Subcommand,
            options: [
                {
                    name: 'type',
                    description: 'Type of animal to generate',
                    type: ApplicationCommandOptionType.String,
                    required: true,
                    choices: [
                        { name: 'Dog', value: 'Dog' },
                        { name: 'Cat', value: 'Cat' },
                        { name: 'Fox', value: 'Fox' },
                        { name: 'Panda', value: 'Panda' },
                        { name: 'Shiba', value: 'Shiba' },
                        { name: 'Koala', value: 'Koala' }
                    ]
                }
            ]
        }
    ],
    /**
    * @param {ChatInputCommandInteraction} interaction
    * @param {client} client
    */
    async execute(interaction, client) {
        const { options, user } = interaction

        switch(options.getSubcommand()) {
            case 'drake': {

                await interaction.deferReply()

                const topText = options.getString('top-text').replaceAll(' ', '+')
                const bottomText = options.getString('bottom-text').replaceAll(' ', '+')

                const embed = new EmbedBuilder()
                .setAuthor({ name: `Generated by ${user.username}`, iconURL: user.avatarURL() })
                .setImage(`https://api.popcat.xyz/drake?text1=${topText}&text2=${bottomText}`)
                .setColor('#ff3f3f')

                return interaction.editReply({ embeds: [embed] })

            }

            case 'sad-cat': {

                await interaction.deferReply()

                const text = options.getString('text').replaceAll(' ', '+')

                const embed = new EmbedBuilder()
                .setAuthor({ name: `Generated by ${user.username}`, iconURL: user.avatarURL() })
                .setImage(`https://api.popcat.xyz/sadcat?text=${text}`)
                .setColor('#ff3f3f')

                return interaction.editReply({ embeds: [embed] })

            }

            case 'jail': {

                await interaction.deferReply()

                let image = options.getAttachment('image')

                if(image) image = image.url
                else image = user.avatarURL().replace('.webp', '.png')

                const embed = new EmbedBuilder()
                .setAuthor({ name: `Generated by ${user.username}`, iconURL: user.avatarURL() })
                .setImage(`https://api.popcat.xyz/jail?image=${image}`)
                .setColor('#ff3f3f')

                return interaction.editReply({ embeds: [embed] })

            }

            case 'wanted': {

                await interaction.deferReply()

                let image = options.getAttachment('image')

                if(image) image = image.url
                else image = user.avatarURL().replace('.webp', '.png')

                const embed = new EmbedBuilder()
                .setAuthor({ name: `Generated by ${user.username}`, iconURL: user.avatarURL() })
                .setImage(`https://api.popcat.xyz/wanted?image=${image}`)
                .setColor('#ff3f3f')

                return interaction.editReply({ embeds: [embed] })

            }

            case 'animal': {

                await interaction.deferReply()

                const gen = require('images-generator')
                const type = options.getString('type')
                const animalEmbed = new EmbedBuilder()
                let animalImage

                if(type == 'Dog') animalImage = await gen.animal.dog(), animalEmbed.setTitle('Woofff! üê∂')
                if(type == 'Cat') animalImage = await gen.animal.cat(), animalEmbed.setTitle('Meowww! üò∫')
                if(type == 'Fox') animalImage = await gen.animal.fox(), animalEmbed.setTitle('What *does* the fox say? ü¶ä')
                if(type == 'Panda') animalImage = await gen.animal.panda(), animalEmbed.setTitle('Yippp! üêº')
                if(type == 'Shiba') animalImage = await gen.animal.shiba(), animalEmbed.setTitle('Woofff! üê∂')
                if(type == 'Koala') animalImage = await gen.animal.koala(), animalEmbed.setTitle('Roarrr! üê®')

                animalEmbed.setColor('#ff3f3f').setImage(animalImage)

                return interaction.editReply({ embeds: [animalEmbed] })

            }
        }
    }
}